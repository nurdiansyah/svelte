/* test/sourcemaps/samples/basic/input.svelte generated by Svelte vx.xx.x */
import {
	SvelteComponent,
	detach,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	text
} from "svelte/internal";

function create_fragment(ctx) {
	let t_value = /*foo*/ ctx[0].bar.baz + "";
	let t;

	return {
		c() {
			t = text(t_value);
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*foo*/ 1 && t_value !== (t_value = /*foo*/ ctx[0].bar.baz + "")) set_data(t, t_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { foo } = $$props;

	$$self.$$set = $$props => {
		if ("foo" in $$props) $$invalidate(0, foo = $$props.foo);
	};

	return [foo];
}

class Input extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { foo: 0 });
	}
}

export default Input;
//# sourceMappingURL=output.js.map